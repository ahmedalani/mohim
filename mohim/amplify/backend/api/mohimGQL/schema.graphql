type Category @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  title: String!
  description: String!
  image: String!
  products: [Product] @connection(keyName: "byCategory", fields: ["id"])
}

type Product @model @key(name: "byCategory", fields: ["categoryID"]) @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  title: String!
  description: String
  image: String!
  images: [String!]!
  sizes: [String]!
  colors: [String]!
  weights: [Float]!
  model: [String]!
  avgRating: Float!
  ratings: Int
  price: Float!
  oldPrice: Float
  categoryID: ID
  category: Category @connection
  comments: [Comment] @connection(keyName: "byProduct", fields: ["id"])
}

type Comment @model @key(name: "byProduct", fields: ["productID"]) @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  userSub: String!
  title: String!
  conetent: String!
  productID: ID
  product: Product @connection
}

type Address @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  userSub: String!
  lable: String!
  addressText: String!
  city: String!
}

type CartProduct @model @key(name: "byCart", fields: ["cartID"]) @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  userSub: String!
  selectedQuantity: Int!
  selectedSize: String
  selectedColor: String
  selectedWeight: Float
  productID: ID!
  product: Product @connection
  cartID: ID
  cart: Cart @connection
}

type Cart @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  userSub: String!
  cartProducts: [CartProduct] @connection(keyName: "byCart", fields: ["id"])
}

type Order @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  userSub: String!
  deliveryNotes: String
  totalPrice: Float!
  paymentMethod: String!
  cartID: ID!
  cart: Cart @connection
  addressID: ID!
  address: Address @connection
}
 